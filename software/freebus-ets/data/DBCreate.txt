CREATE TABLE IF NOT EXISTS manufacturer ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, MANUFACTURER_ID INTEGER, MANUFACTURER_NAME VARCHAR(50), ADDRESS_ID INTEGER);
CREATE TABLE IF NOT EXISTS functional_entity ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, FUNCTIONAL_ENTITY_ID INTEGER, MANUFACTURER_ID INTEGER, FUNCTIONAL_ENTITY_NAME VARCHAR(50), FUNCTIONAL_ENTITY_NUMB VARCHAR(20), FUNCTIONAL_ENTITY_DESCRIPTION VARCHAR(80), FUN_FUNCTIONAL_ENTITY_ID INTEGER, HELP_FILE_NAME VARCHAR(255), CONTEXT_ID INTEGER);
CREATE TABLE IF NOT EXISTS bcu_type ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, BCU_TYPE_NUMBER INTEGER, BCU_TYPE_NAME VARCHAR(50), BCU_TYPE_CPU VARCHAR(50));
CREATE TABLE IF NOT EXISTS symbol ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, SYMBOL_ID INTEGER, SYMBOL_FILENAME VARCHAR(80), SYMBOL_NAME VARCHAR(50));
CREATE TABLE IF NOT EXISTS hw_product ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, PRODUCT_ID INTEGER, MANUFACTURER_ID INTEGER, SYMBOL_ID INTEGER, PRODUCT_NAME VARCHAR(50), PRODUCT_VERSION_NUMBER INTEGER, COMPONENT_TYPE INTEGER, COMPONENT_ATTRIBUTES INTEGER, BUS_CURRENT INTEGER, PRODUCT_SERIAL_NUMBER VARCHAR(30), COMPONENT_TYPE_NUMBER INTEGER, PRODUCT_PICTURE VARCHAR(255), BCU_TYPE_NUMBER INTEGER, PRODUCT_HANDLING INTEGER, PRODUCT_DLL VARCHAR(255), ORIGINAL_MANUFACTURER_ID INTEGER);
CREATE TABLE IF NOT EXISTS catalog_entry ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, CATALOG_ENTRY_ID INTEGER, PRODUCT_ID INTEGER, MANUFACTURER_ID INTEGER, SYMBOL_ID INTEGER, ORDER_NUMBER VARCHAR(20), ENTRY_NAME VARCHAR(50), ENTRY_COLOUR VARCHAR(20), ENTRY_WIDTH_IN_MODULES REAL, ENTRY_WIDTH_IN_MILLIMETERS REAL, PRICE REAL, CURRENCY VARCHAR(3), QUANTITY_UNIT VARCHAR(10), MATERIAL_PRICE REAL, MOUNTING_HOURS INTEGER, MOUNTING_MINUTES INTEGER, MOUNTING_SECONDS INTEGER, DIN_FLAG INTEGER, SERIES VARCHAR(20), CATALOG_NAME VARCHAR(50), PAGE_NUMBER INTEGER, ENTRY_PICTURE VARCHAR(255), DESIGNATION_TYPE VARCHAR(1), DESIGNATION_FUNCTION VARCHAR(2), HELP_FILE_NAME VARCHAR(255), CONTEXT_ID INTEGER, RAM_SIZE INTEGER, REGISTRATION_NUMBER INTEGER, REGISTRATION_YEAR INTEGER, ENTRY_STATUS_CODE INTEGER, REGISTRATION_TS VARCHAR(42));
CREATE TABLE IF NOT EXISTS medium_type ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, MEDIUM_TYPE_NUMBER INTEGER, MEDIUM_TYPE_NAME VARCHAR(50), MEDIUM_TYPE_SHORT_NAME VARCHAR(20));
CREATE TABLE IF NOT EXISTS mask ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, MASK_ID INTEGER, MASK_VERSION INTEGER, USER_RAM_START INTEGER, USER_RAM_END INTEGER, USER_EEPROM_START INTEGER, USER_EEPROM_END INTEGER, RUN_ERROR_ADDRESS INTEGER, ADDRESS_TAB_ADDRESS INTEGER, ASSOCTABPTR_ADDRESS INTEGER, COMMSTABPTR_ADDRESS INTEGER, MANUFACTURER_DATA_ADDRESS INTEGER, MANUFACTURER_DATA_SIZE INTEGER, MANUFACTURER_ID_ADDRESS INTEGER, ROUTECNT_ADDRESS INTEGER, MANUFACTURER_ID_PROTECTED INTEGER, MASK_VERSION_NAME VARCHAR(50), MASK_EEPROM_DATA VARCHAR(32767), MASK_DATA_LENGTH INTEGER, ADDRESS_TAB_LCS INTEGER, ASSOC_TAB_LCS INTEGER, APPLICATION_PROGRAM_LCS INTEGER, PEI_PROGRAM_LCS INTEGER, LOAD_CONTROL_ADDRESS INTEGER, RUN_CONTROL_ADDRESS INTEGER, EXTERNAL_MEMORY_START INTEGER, EXTERNAL_MEMORY_END INTEGER, APPLICATION_PROGRAM_RCS INTEGER, PEI_PROGRAM_RCS INTEGER, PORT_A_DDR INTEGER, PORT_ADDRESS_PROTECTED INTEGER);
CREATE TABLE IF NOT EXISTS assembler ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ASSEMBLER_ID INTEGER, ASSEMBLER_NAME VARCHAR(50), ASSEMBLER_TYPE INTEGER);
CREATE TABLE IF NOT EXISTS application_program ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, PROGRAM_ID INTEGER, SYMBOL_ID INTEGER, MASK_ID INTEGER, PROGRAM_NAME VARCHAR(50), PROGRAM_VERSION VARCHAR(5), PROGRAM_VERSION_NUMBER INTEGER, LINKABLE INTEGER, DEVICE_TYPE INTEGER, PEI_TYPE INTEGER, ADDRESS_TAB_SIZE INTEGER, ASSOCTAB_ADDRESS INTEGER, ASSOCTAB_SIZE INTEGER, COMMSTAB_ADDRESS INTEGER, COMMSTAB_SIZE INTEGER, PROGRAM_SERIAL_NUMBER VARCHAR(20), MANUFACTURER_ID INTEGER, EEPROM_DATA VARCHAR(32767), DATA_LENGTH INTEGER, S19_FILE VARCHAR(255), MAP_FILE VARCHAR(255), ASSEMBLER_ID INTEGER, HELP_FILE_NAME VARCHAR(255), CONTEXT_ID INTEGER, DYNAMIC_MANAGEMENT INTEGER, PROGRAM_TYPE INTEGER, RAM_SIZE INTEGER, ORIGINAL_MANUFACTURER_ID INTEGER, API_VERSION INTEGER, PROGRAM_STYLE INTEGER, IS_POLLING_MASTER INTEGER, NUMBER_OF_POLLING_GROUPS INTEGER);
CREATE TABLE IF NOT EXISTS virtual_device ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, VIRTUAL_DEVICE_ID INTEGER, SYMBOL_ID INTEGER, CATALOG_ENTRY_ID INTEGER, PROGRAM_ID INTEGER, VIRTUAL_DEVICE_NAME VARCHAR(50), VIRTUAL_DEVICE_DESCRIPTION VARCHAR(80), FUNCTIONAL_ENTITY_ID INTEGER, PRODUCT_TYPE_ID INTEGER, HELP_FILE_NAME VARCHAR(255), CONTEXT_ID INTEGER, PEI_PROGRAM_ID INTEGER, VIRTUAL_DEVICE_NUMBER INTEGER, MEDIUM_TYPES VARCHAR(255));
CREATE TABLE IF NOT EXISTS mask_entry ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, MASK_ENTRY_ID INTEGER, MASK_ID INTEGER, MASK_ENTRY_NAME VARCHAR(50), MASK_ENTRY_ADDRESS INTEGER);
CREATE TABLE IF NOT EXISTS device_info ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, DEVICE_INFO_ID INTEGER, MASK_ID INTEGER, DEV_DEVICE_INFO_ID INTEGER, DEVICE_INFO_NAME VARCHAR(50), FUNCTION_NUMBER INTEGER, DEVICE_INFO_TYPE INTEGER, BIT_POSITION INTEGER, DEVICE_INFO_VISIBLE INTEGER);
CREATE TABLE IF NOT EXISTS ete_language ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, LANGUAGE_ID INTEGER, LANGUAGE_NAME VARCHAR(50), DATABASE_LANGUAGE INTEGER);
CREATE TABLE IF NOT EXISTS device_info_value ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, DEVICE_INFO_VALUE_ID INTEGER, DEVICE_INFO_ID INTEGER, BITMAP_ID INTEGER, MINIMUM_VALUE INTEGER, MAXIMUM_VALUE INTEGER, DISPLAYED_VALUE VARCHAR(50));
CREATE TABLE IF NOT EXISTS parameter_atomic_type ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ATOMIC_TYPE_NUMBER INTEGER, ATOMIC_TYPE_NAME VARCHAR(50), DISPATTR VARCHAR(1));
CREATE TABLE IF NOT EXISTS parameter_type ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, PARAMETER_TYPE_ID INTEGER, ATOMIC_TYPE_NUMBER INTEGER, PROGRAM_ID INTEGER, PARAMETER_TYPE_NAME VARCHAR(50), PARAMETER_MINIMUM_VALUE INTEGER, PARAMETER_MAXIMUM_VALUE INTEGER, PARAMETER_TYPE_DESCRIPTION VARCHAR(80), PARAMETER_TYPE_LOW_ACCESS INTEGER, PARAMETER_TYPE_HIGH_ACCESS INTEGER, PARAMETER_TYPE_SIZE INTEGER, PARAMETER_MINIMUM_DOUBLE_VALUE REAL, PARAMETER_MAXIMUM_DOUBLE_VALUE REAL);
CREATE TABLE IF NOT EXISTS parameter_list_of_values ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, PARAMETER_TYPE_ID INTEGER, REAL_VALUE INTEGER, DISPLAYED_VALUE VARCHAR(50), DISPLAY_ORDER INTEGER, PARAMETER_VALUE_ID INTEGER, BINARY_VALUE VARCHAR(32767), BINARY_VALUE_LENGTH INTEGER, DOUBLE_VALUE REAL);
CREATE TABLE IF NOT EXISTS parameter ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, PROGRAM_ID INTEGER, PARAMETER_TYPE_ID INTEGER, PARAMETER_NUMBER INTEGER, PARAMETER_NAME VARCHAR(50), PARAMETER_LOW_ACCESS INTEGER, PARAMETER_HIGH_ACCESS INTEGER, PARENT_PARM_VALUE INTEGER, PARAMETER_SIZE INTEGER, PARAMETER_FUNCTION VARCHAR(30), PARAMETER_DISPLAY_ORDER INTEGER, PARAMETER_ADDRESS INTEGER, PARAMETER_BITOFFSET INTEGER, PARAMETER_DESCRIPTION VARCHAR(80), PARAMETER_ID INTEGER, PAR_PARAMETER_ID INTEGER, PARAMETER_LABEL VARCHAR(30), PARAMETER_DEFAULT_LONG INTEGER, PARAMETER_DEFAULT_STRING VARCHAR(255), CONTEXT_ID INTEGER, PARAMETER_DEFAULT_DOUBLE REAL, PATCH_ALWAYS INTEGER);
CREATE TABLE IF NOT EXISTS object_type ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, OBJECT_TYPE_CODE INTEGER, OBJECT_TYPE_NAME VARCHAR(50));
CREATE TABLE IF NOT EXISTS object_priority ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, OBJECT_PRIORITY_CODE INTEGER, OBJECT_PRIORITY_NAME VARCHAR(50));
CREATE TABLE IF NOT EXISTS communication_object ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, PROGRAM_ID INTEGER, OBJECT_NAME VARCHAR(50), OBJECT_FUNCTION VARCHAR(30), OBJECT_READENABLED INTEGER, OBJECT_WRITEENABLED INTEGER, OBJECT_COMMENABLED INTEGER, OBJECT_TRANSENABLED INTEGER, OBJECT_DISPLAY_ORDER INTEGER, PARENT_PARAMETER_VALUE INTEGER, OBJECT_ID INTEGER, PARAMETER_ID INTEGER, OBJECT_NUMBER INTEGER, OBJECT_DESCRIPTION VARCHAR(80), OBJECT_TYPE INTEGER, OBJECT_PRIORITY INTEGER, OBJECT_UPDATEENABLED INTEGER, OBJECT_UNIQUE_NUMBER INTEGER);
CREATE TABLE IF NOT EXISTS text_attribute ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, TEXT_ATTRIBUTE_ID INTEGER, LANGUAGE_ID INTEGER, COLUMN_ID INTEGER, ENTITY_ID INTEGER, TEXT_ATTRIBUTE_TEXT VARCHAR(80));
CREATE TABLE IF NOT EXISTS product_description ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, PRODUCT_DESCRIPTION_ID INTEGER, CATALOG_ENTRY_ID INTEGER, PRODUCT_DESCRIPTION_TEXT VARCHAR(1000), DISPLAY_ORDER INTEGER, LANGUAGE_ID INTEGER);
CREATE TABLE IF NOT EXISTS help_file ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, HELP_FILE_ID INTEGER, LANGUAGE_ID INTEGER, ENTITY_ID INTEGER, HELP_FILE_NAME VARCHAR(255));
CREATE TABLE IF NOT EXISTS product_to_program ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, PROD2PROG_ID INTEGER, PRODUCT_ID INTEGER, PROGRAM_ID INTEGER, PROD2PROG_STATUS VARCHAR(40), PEI_PROGRAM_ID INTEGER, PROD2PROG_STATUS_CODE INTEGER, REGISTRATION_NUMBER INTEGER, REGISTRATION_YEAR INTEGER, ORIGINAL_REGISTRATION_NUMBER INTEGER, ORIGINAL_REGISTRATION_YEAR INTEGER, EXPIRATION_DATE VARCHAR(42), REGISTRATION_TS VARCHAR(42));
CREATE TABLE IF NOT EXISTS product_to_program_to_mt ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, PROD2PROG2MT_ID INTEGER, PROD2PROG_ID INTEGER, MEDIUM_TYPE_NUMBER INTEGER);
CREATE TABLE IF NOT EXISTS program_description ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, PROGRAM_DESCRIPTION_ID INTEGER, PROGRAM_ID INTEGER, TEXT VARCHAR(1000), DISPLAY_ORDER INTEGER, LANGUAGE_ID INTEGER);
CREATE TABLE IF NOT EXISTS device_object ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, DEVICE_ID INTEGER, OBJECT_PRIO INTEGER, OBJECT_READ INTEGER, OBJECT_WRITE INTEGER, OBJECT_COMM INTEGER, OBJECT_TRANS INTEGER, OBJECT_SUBGROUPS_TEXT VARCHAR(255), DEVICE_OBJECT_ID INTEGER, OBJECT_ID INTEGER, DEVICE_OBJECT_NUMBER INTEGER, OBJECT_SUBGROUPS_TEXT2 VARCHAR(255), DEVICE_OBJECT_VISIBLE INTEGER, DEVICE_OBJECT_UNIQUE_NAME VARCHAR(50), OBJECT_UPDATE INTEGER, DEVICE_OBJECT_UNIQUE_NUMBER INTEGER, DEVICE_OBJECT_TYPE INTEGER);
CREATE TABLE IF NOT EXISTS device_parameter ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, DEVICE_ID INTEGER, DEVICE_PARAMETER_ID INTEGER, PARAMETER_ID INTEGER, DEVICE_PARAMETER_NUMBER INTEGER, DEVICE_PARAMETER_VISIBLE INTEGER, PARAMETER_VALUE_LONG INTEGER, PARAMETER_VALUE_STRING VARCHAR(255), PROGRAM_TYPE INTEGER, PARAMETER_VALUE_DOUBLE REAL);
CREATE TABLE IF NOT EXISTS Connections ( id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,NAME VARCHAR(100)  ,DATA VARCHAR(32767));